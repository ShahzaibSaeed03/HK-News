<div class="container mx-auto p-2  md:p-12 flex flex-wrap md:flex-nowrap gap-8 text-black text-family" *ngIf="article">
    <!-- Main News Section -->
    <div class="w-full md:w-[70%] p-1">
        <h1 class="text-3xl md:text-[40px] font-[700] md:font-[700] text-black leading-tight">
            {{article.title}}    </h1>
        <img *ngIf="thumbUrl" [src]="thumbUrl" alt="Article Thumbnail" alt="News Image" class="w-full  mt-4 object-fill rounded-lg ">
        <div class="mt-2  gap-2 text-gray-400 text-md">
            <div class="">By: <span class="text-black font-semibold">{{article.author}}</span> </div>
            <div>Published: {{ article.spdate }}</div>
            <div>Modified:    {{ calculateTimeAgo(article.updated_at) }}</div>

        </div>
        <div class="flex gap-5 text-2xl mt-2 text-black ">
            <span><i class="fa-solid fa-envelope"></i></span>
            <span><i class="fa-solid fa-comment"></i></span>
            <span class="share-btn cursor-pointer" (click)="togglePopup()">
                <i class="fa-solid fa-share-nodes"></i>
            </span>        </div>


            <div *ngIf="article?.entries?.length">
                <div *ngFor="let entry of article.entries">
                  <div [innerHTML]="entry.body" class="mt-4 leading-relaxed"></div>
                </div>
              </div>


              <div *ngFor="let entry of article.entries">
                <!-- Check if the entry has an image -->
                <!-- <div *ngIf="entry.type === 'image' && entry.image">
                  <img [src]="setImageUrl(entry.image)" alt="Extra Image" class="w-full mt-4 rounded-lg" />
                </div> -->
              
                <!-- Check if the entry has a video -->
                <div *ngIf="entry.type === 'video' && entry.video">
                  <video controls class="w-full mt-4 rounded-lg">
                    <source [src]="setVideoUrl(entry.video)" type="video/mp4" />
                    Your browser does not support the video tag.
                  </video>
                </div>
                <!-- <div *ngIf="entry.type === 'image' && entry.image">
                  <img [src]="setImageUrl(entry.image)"  />
                </div> -->
                <!-- Check if the entry has body text -->
                <div *ngIf="entry.type === 'text' && entry.body" class="mt-4">
                  <div [innerHTML]="entry.body"></div>
                </div>
              </div>
              
             <!-- Loop through extra images and display them -->


              
              
<div class="tags" *ngIf="tags && tags.length > 0">
    <span *ngFor="let tag of tags" class="tag">
      {{ tag.name }}  <!-- Display the name of each tag -->
    </span>
  </div>
  
             <app-like-dislike></app-like-dislike> 
<app-comment></app-comment>



<div class="more mt-3">

<app-more-news></app-more-news>
</div>
    </div>

    <!-- Trending Videos Sidebar -->
    <div class="w-full md:w-[30%] ">
<app-tranding-news></app-tranding-news>        
    </div>
</div>


<div *ngIf="showPopup" class="fixed inset-0 bg-black opacity-50 z-40"></div>

<!-- Popup (Shows only when showPopup is true) -->
<div *ngIf="showPopup" class="popup-container fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white rounded-xl shadow-lg p-4  w-80 text-center z-50">
    <!-- Header -->
    <div class="flex justify-between items-center mb-3">
        <h2 class="text-sm font-medium">Share with</h2>
        <button (click)="togglePopup()" class="text-gray-600 hover:text-gray-800">
            <i class="fa-solid fa-xmark text-lg"></i>
        </button>
    </div>

    <!-- Icons Section -->
  <div class="flex flex-wrap justify-around items-center gap-y-4">
    <!-- WhatsApp -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-brands fa-whatsapp text-2xl text-green-600"></i>
      </div>
      <p class="mt-1 text-xs">WhatsApp</p>
    </div>
  
    <!-- Facebook -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-brands fa-facebook-f text-2xl text-blue-600"></i>
      </div>
      <p class="mt-1 text-xs">Facebook</p>
    </div>
  
    <!-- Twitter -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-brands fa-x-twitter text-2xl text-black"></i>
      </div>
      <p class="mt-1 text-xs">Twitter</p>
    </div>
  
    <!-- LinkedIn -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-brands fa-linkedin-in text-2xl text-blue-700"></i>
      </div>
      <p class="mt-1 text-xs">LinkedIn</p>
    </div>
  
    <!-- Instagram -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-brands fa-instagram text-2xl text-pink-500"></i>
      </div>
      <p class="mt-1 text-xs">Instagram</p>
    </div>
  
    <!-- YouTube -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-brands fa-youtube text-2xl text-red-600"></i>
      </div>
      <p class="mt-1 text-xs">YouTube</p>
    </div>
  
    <!-- Pinterest -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-brands fa-pinterest text-2xl text-red-500"></i>
      </div>
      <p class="mt-1 text-xs">Pinterest</p>
    </div>
  
    <!-- Snapchat -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-brands fa-snapchat-ghost text-2xl text-yellow-400"></i>
      </div>
      <p class="mt-1 text-xs">Snapchat</p>
    </div>
  
    <!-- Tumblr -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-brands fa-tumblr text-2xl text-blue-900"></i>
      </div>
      <p class="mt-1 text-xs">Tumblr</p>
    </div>
  
    <!-- Telegram -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-brands fa-telegram text-2xl text-sky-500"></i>
      </div>
      <p class="mt-1 text-xs">Telegram</p>
    </div>
  
    <!-- Reddit -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-brands fa-reddit-alien text-2xl text-orange-600"></i>
      </div>
      <p class="mt-1 text-xs">Reddit</p>
    </div>
  
    <!-- Text -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-regular fa-comment-dots text-2xl text-gray-600"></i>
      </div>
      <p class="mt-1 text-xs">Text</p>
    </div>
  
    <!-- Email -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-regular fa-envelope text-2xl text-blue-400"></i>
      </div>
      <p class="mt-1 text-xs">Email</p>
    </div>
  
    <!-- Link -->
    <div class="flex flex-col items-center">
      <div class="w-12 h-12 flex justify-center items-center bg-gray-200 rounded-full">
        <i class="fa-solid fa-link text-2xl text-gray-600"></i>
      </div>
      <p class="mt-1 text-xs">Link</p>
    </div>
  </div>
</div>



author
: 
"Renee Harris"
body
: 
"A judge dismissed five out of nine claims in Rodney Lil Rod Jones’ lawsuit against Sean Diddy Combs including racketeering and emotional distress. The ruling criticized Jones’ attorney for weak legal filings but allowed the sexual assault allegations to proceed. Despite the setback Jones' legal team remains determined as the case moves to the discovery phase. Diddy’s legal team is expected to continue challenging the remaining claims."
categories
: 
"Celebrity"
category_id
: 
null
created_at
: 
"2025-04-17T07:22:23.000000Z"
deleted_at
: 
null
entries
: 
Array(3)
0
: 
body
: 
"<p class=\"MsoNormal\"><span style=\"mso-spacerun: yes;\">&nbsp;</span>Sean Diddy Combs secured a partial legal victory after a judge dismissed several major claims in a lawsuit filed by former music producer Rodney Jones, also known as Lil Rod. Jones had accused the hip-hop mogul of sexual assault along with other allegations.</p>\n<p class=\"MsoNormal\">According to court documents, the judge struck down five out of the nine claims presented in the lawsuit including racketeering (RICO) infliction of emotional distress and breach of contract. Additionally, a claim filed under the Trafficking Victims Protection Act against Diddy&rsquo;s company Combs Global was dismissed. These dismissals mark a significant reduction in the scope of the case weakening some of Jones' legal arguments.</p>"
created_at
: 
"2025-04-17T07:22:24.000000Z"
deleted_at
: 
null
id
: 
233
image
: 
"2025-04/17/165-entry-0-1744874543.jpg"
order
: 
0
post_id
: 
165
source
: 
null
title
: 
null
type
: 
"image"
updated_at
: 
"2025-04-17T07:22:24.000000Z"
user_id
: 
21
video
: 
null
[[Prototype]]
: 
Object
1
: 
{id: 234, post_id: 165, user_id: 21, order: 1, type: 'image', …}
2
: 
{id: 235, post_id: 165, user_id: 21, order: 2, type: 'image', …}

here my ts import { CommonModule } from '@angular/common';
import { Component, HostListener, OnInit, Renderer2 } from '@angular/core';
import { ActivatedRoute } from '@angular/router';

import { ArticleService } from '../service/article.service';

import { CommentComponent } from '../comment-control/comment/comment.component';
import { LikeDislikeComponent } from "../share/like-dislike/like-dislike.component";
import { MoreNewsComponent } from '../more-news/more-news.component';
import { TrandingNewsComponent } from "../tranding-news/tranding-news.component";

@Component({
  selector: 'app-article',
  standalone: true,
  imports: [
    CommonModule,
    CommentComponent,
    LikeDislikeComponent,
    MoreNewsComponent,
    TrandingNewsComponent
  ],
  templateUrl: './article.component.html',
  styleUrls: ['./article.component.css']
})
export class ArticleComponent implements OnInit {
  private baseUrl = 'https://new.hardknocknews.tv';

  article: any;
  thumbUrl: string | null = null;
  extraImageUrls: string[] = [];
  showPopup = false;

  tags: { id: number; name: string; slug: string; icon: string | null; color: string | null }[] = [];

  constructor(
    private renderer: Renderer2,
    private articleService: ArticleService,
    private route: ActivatedRoute
  ) {}

  ngOnInit(): void {
    window.scrollTo(0, 0);

    this.articleService.getLike().subscribe({
      next: (res) => console.log('Like Data:', res),
      error: (err) => console.error('Error fetching like data:', err)
    });

    const navData = history.state['articleData'];
    const storedArticle = localStorage.getItem('selectedArticle');

    if (navData) {
      this.handleArticle(navData);
    } else if (storedArticle) {
      this.handleArticle(JSON.parse(storedArticle));
    } else {
      console.error('No article data received.');
      return;
    }
  }

  handleArticle(data: any): void {
    this.article = data;
    this.setThumbUrl(data.thumb);
    this.setExtraImages(data.entries || []);
    this.tags = data.tags || [];
    this.article.spdate = this.calculateTimeAgo(data.spdate);
    console.log(this.article);
  }

  setThumbUrl(thumb: string): void {
    if (!thumb) return;
  
    const cleanThumb = thumb.replace(/(-s|-m|-l)?\.jpg$/, '');
    this.thumbUrl = cleanThumb.startsWith('http')
      ? `${cleanThumb}-s.jpg`
      : `${this.baseUrl}/upload/media/posts/${cleanThumb}-s.jpg`;
  
    console.log('Thumbnail Image URL:', this.thumbUrl);
  }
  

setExtraImages(entries: any[]): void {
  this.extraImageUrls = [];

  entries.forEach((entry: any) => {
    if (entry.type === 'image' && entry.image) {
      const imageUrl = this.setImageUrl(entry.image);
      this.extraImageUrls.push(imageUrl);
      console.log('Image URL:', imageUrl);
    }

    if (entry.type === 'video' && entry.video) {
      const videoUrl = this.setVideoUrl(entry.video);
      console.log('Video URL:', videoUrl);
    }

    if (entry.type === 'text' && entry.body) {
      this.extraImageUrls.push(entry.body);
      console.log('Text Body:', entry.body);
    }
  });
}


  setImageUrl(image: string): string {
    const cleanImage = image.replace(/(-s|-m|-l)?\.jpg$/, '');
    return cleanImage.startsWith('http')
      ? `${cleanImage}-s.jpg`
      : `${this.baseUrl}/${cleanImage}-s.jpg`;
  }
  
  

  setVideoUrl(video: string): string {
    let finalVideoUrl = video.startsWith('http')
      ? video
      : `${this.baseUrl}/${video}`;

    return finalVideoUrl.replace(/[^a-zA-Z0-9\-._~:\/?#[\]@!$&'()*+,;=]/g, (match) => {
      return '%' + match.charCodeAt(0).toString(16).toUpperCase();
    });
  }

  calculateTimeAgo(dateString: string): string {
    const now = new Date();
    const date = new Date(dateString);

    const seconds = Math.floor((now.getTime() - date.getTime()) / 1000);
    const minutes = Math.floor(seconds / 60);
    const hours = Math.floor(minutes / 60);
    const days = Math.floor(hours / 24);
    const months = Math.floor(days / 30);
    const years = Math.floor(days / 365);

    if (years > 0) return `${years} year${years > 1 ? 's' : ''} ago`;
    if (months > 0) return `${months} month${months > 1 ? 's' : ''} ago`;
    if (days > 0) return `${days} day${days > 1 ? 's' : ''} ago`;
    if (hours > 0) return `${hours} hour${hours > 1 ? 's' : ''} ago`;
    if (minutes > 0) return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;
    return `${seconds} second${seconds > 1 ? 's' : ''} ago`;
  }

  togglePopup(): void {
    this.showPopup = !this.showPopup;
    this.showPopup
      ? this.renderer.addClass(document.body, 'blur-bg')
      : this.renderer.removeClass(document.body, 'blur-bg');
  }

  @HostListener('document:click', ['$event'])
  closePopup(event: Event): void {
    const target = event.target as HTMLElement;
    if (!target.closest('.popup-container') && !target.closest('.share-btn')) {
      this.showPopup = false;
      this.renderer.removeClass(document.body, 'blur-bg');
    }
  }

  shareOn(platform: string): void {
    const url = encodeURIComponent(window.location.href);
    let shareUrl = '';

    switch (platform) {
      case 'facebook':
        shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${url}`;
        break;
      case 'twitter':
        shareUrl = `https://twitter.com/intent/tweet?url=${url}`;
        break;
      case 'linkedin':
        shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${url}`;
        break;
      case 'whatsapp':
        shareUrl = `https://api.whatsapp.com/send?text=${url}`;
        break;
      case 'telegram':
        shareUrl = `https://t.me/share/url?url=${url}`;
        break;
      case 'reddit':
        shareUrl = `https://www.reddit.com/submit?url=${url}`;
        break;
      case 'pinterest':
        shareUrl = `https://pinterest.com/pin/create/button/?url=${url}`;
        break;
      case 'email':
        shareUrl = `mailto:?subject=Check this out&body=${url}`;
        break;
      case 'text':
        shareUrl = `sms:?body=${url}`;
        break;
      default:
        alert('Sharing not supported for this platform.');
        return;
    }

    window.open(shareUrl, '_blank');
  }
}


main chata ho thumnail ka url jo hain wo thum nail ni ariicle ma entries main jo image hain wo show ho jaye